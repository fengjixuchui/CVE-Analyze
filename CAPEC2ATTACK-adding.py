import xlrd
from distutils.command.clean import clean
from py2neo import Graph,Node,Relationship
import json
import os
from py2neo.matching import *

KGraph = Graph(
    "http://nju.csuncle.com:7474", 
    auth=("neo4j","wlm94929")
)

excel_content = xlrd.open_workbook("D:\\Users\\William\\Downloads\\capec_mapping_tmp.xlsx")
ret1 = excel_content.sheets()[0]
sheet_1 = excel_content.sheet_by_index(0)
rows = sheet_1.get_rows()
matcher = NodeMatcher(KGraph)

for row in rows:
    capec=row[0].value
    attack=row[3].value

    AID=""
    if attack!="":
        attack_items=attack.split("#")
        for attack_item in attack_items:
            if attack_item.strip()=="":
                continue
            attack_elems=attack_item.split(":")
            alen=len(attack_elems)
            AID=attack_elems[0].strip()
            ANAME=attack_elems[1].strip()
            if alen==3:
                ANAME=attack_elems[2]

            
            CAPEC_node=matcher.match('CAPEC',name=int(capec.split("-")[1].strip())).first()
            ATT_node= matcher.match("ATT&CK").where("_.TTP_id Contains '"+AID+"'").first() 

            relation1=Relationship(CAPEC_node,"CAPEC2ATTACK",ATT_node)
            relation2=Relationship(ATT_node,"ATTACK2CAPEC",CAPEC_node)
            KGraph.create(relation1)
            KGraph.create(relation2)


            
    # print(row)
