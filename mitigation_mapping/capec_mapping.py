from distutils.command.clean import clean
from encodings import utf_8
from xml.dom.minidom import Entity
from py2neo import Graph,Node,Relationship
import json
import os
from py2neo.matching import *

KGraph = Graph(
    "http://nju.csuncle.com:7474", 
    auth=("neo4j","wlm94929")
)

matcher = NodeMatcher(KGraph)
CAPEC_entity = matcher.match('CAPEC').all()

relationship_matcher=RelationshipMatcher(KGraph)
# CAPEC2ATTACK=relationship_matcher.match(None, r_type='CAPEC2ATTACK').all()
    
with open('D:\WSL\ATTACKGraph\mitigation_mapping\capec_mapping.txt',"w",encoding="utf_8") as wf:
    for capec_item in CAPEC_entity:
        capec_node=capec_item
        capec_id=capec_node["CAPEC_ID"]
        capec_name=capec_node["Name"]
        capec_description=capec_node["Description"]

        CAPEC2ATTACK=relationship_matcher.match([capec_item], r_type='CAPEC2ATTACK').all()
        if len(CAPEC2ATTACK)>0:
            for item in CAPEC2ATTACK:
                    attack_node=item.nodes[1]
                    attack_id=attack_node["TTP_id_unique"]
                    attack_name=attack_node["TTP_name"]
                    attack_description=attack_node["Description"]
                    wf.write("CAPEC-"+str(capec_id)+"\t"+capec_name+"\t"+capec_description+"\t"+attack_id+":"+attack_name+"\n")
        else:
            wf.write("CAPEC-"+str(capec_id)+"\t"+capec_name+"\t"+capec_description+"\t"+""+"\n") 
            

