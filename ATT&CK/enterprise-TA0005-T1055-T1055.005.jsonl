{"TTP_id": "enterprise-TA0005-T1055-T1055.005", "TTP_name": "Thread Local Storage", "Description": "Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. TLS callback injection is a method of executing arbitrary code in the address space of a separate live process.TLS callback injection involves manipulating pointers inside a portable executable (PE) to redirect a process to malicious code before reaching the code's legitimate entry point. TLS callbacks are normally used by the OS to setup and/or cleanup data used by threads. Manipulating TLS callbacks may be performed by allocating and writing to specific offsets within a processâ€™ memory space using other Process Injection techniques such as Process Hollowing.[1]Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via TLS callback injection may also evade detection from security products since the execution is masked under a legitimate process.", "Property": {"ID": "T1055.005", "Sub-technique of": "T1055", "Tactics": "Defense Evasion, Privilege Escalation", "Platforms": "Windows", "Defense Bypassed": "Anti-virus, Application control", "Version": "1.1", "Created": "14 January 2020", "Last Modified": "18 October 2021"}, "Examples": {"S0386": ["https://attack.mitre.org/software/S0386", "Ursnif", "Ursnif has injected code into target processes via thread local storage callbacks.[2][3][4]"]}, "Mitigation": {"M1040": ["https://attack.mitre.org/mitigations/M1040", "Behavior Prevention on Endpoint", "Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process."]}, "Detection": {"OS API Execution": ["Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as CreateRemoteThread, SuspendThread/SetThreadContext/ResumeThread, and those that can be used to modify memory within another process, such as VirtualAllocEx/WriteProcessMemory, may be used for this technique.[5]", "DS0009", "https://attack.mitre.org/datasources/DS0009", "Process"], "Process Access": ["Monitor for processes being viewed that may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges.", "", "", ""], "Process Modification": ["Monitor for changes made to processes that may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges.", "", "", ""]}}
