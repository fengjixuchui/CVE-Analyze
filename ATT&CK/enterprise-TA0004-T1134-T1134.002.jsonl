{"TTP_id": "enterprise-TA0004-T1134-T1134.002", "TTP_name": "Create Process with Token", "Description": "Adversaries may create a new process with a different token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such as CreateProcessWithTokenW and runas.[1]Creating processes with a different token may require the credentials of the target user, specific privileges to impersonate that user, or access to the token to be used (ex: gathered via other means such as Token Impersonation/Theft or Make and Impersonate Token).", "Property": {"ID": "T1134.002", "Sub-technique of": "T1134", "Tactics": "Defense Evasion, Privilege Escalation", "Platforms": "Windows", "Defense Bypassed": "File system access controls, System access controls, Windows User Account Control", "Contributors": "Vadim Khrykov", "Version": "1.1", "Created": "18 February 2020", "Last Modified": "17 October 2021"}, "Examples": {"S0456": ["https://attack.mitre.org/software/S0456", "Aria-body", "Aria-body has the ability to execute a process using runas.[2]"], "S0344": ["https://attack.mitre.org/software/S0344", "Azorult", "Azorult can call WTSQueryUserToken and CreateProcessAsUser to start a new process with local system privileges.[3]"], "S0239": ["https://attack.mitre.org/software/S0239", "Bankshot", "Bankshot grabs a user token using WTSQueryUserToken and then creates a process by impersonating a logged-on user.[4]"], "S0363": ["https://attack.mitre.org/software/S0363", "Empire", "Empire can use Invoke-RunAs to make tokens.[5]"], "S0356": ["https://attack.mitre.org/software/S0356", "KONNI", "KONNI has duplicated the token of a high integrity process to spawn an instance of cmd.exe under an impersonated user.[6][7]"], "G0032": ["https://attack.mitre.org/groups/G0032", "Lazarus Group", "Lazarus Group keylogger KiloAlfa obtains user tokens from interactive sessions to execute itself with API call CreateProcessAsUserA under that user's context.[8][9]"], "S0501": ["https://attack.mitre.org/software/S0501", "PipeMon", "PipeMon can attempt to gain administrative privileges using token impersonation.[10]"], "S0378": ["https://attack.mitre.org/software/S0378", "PoshC2", "PoshC2 can use Invoke-RunAs to make tokens.[11]"], "S0496": ["https://attack.mitre.org/software/S0496", "REvil", "REvil can launch an instance of itself with administrative rights using runas.[12]"], "G0010": ["https://attack.mitre.org/groups/G0010", "Turla", "Turla RPC backdoors can impersonate or steal process tokens before executing commands.[13]"], "S0412": ["https://attack.mitre.org/software/S0412", "ZxShell", "ZxShell has a command called RunAs, which creates a new process as another user or process context.[14]"]}, "Mitigation": {"M1026": ["https://attack.mitre.org/mitigations/M1026", "Privileged Account Management", "Limit permissions so that users and user groups cannot create tokens. This setting should be defined for the local system account only. GPO: Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Create a token object. [15] Also define who can create a process level token to only the local and network service through GPO: Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Replace a process level token.[16]Administrators should log in as a standard user but run their tools with administrator privileges using the built-in access token manipulation command runas.[17]"], "M1018": ["https://attack.mitre.org/mitigations/M1018", "User Account Management", "An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require."]}, "Detection": {"Command Execution": ["Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command or similar artifacts. Detailed command-line logging is not enabled by default in Windows.[18]", "DS0017", "https://attack.mitre.org/datasources/DS0017", "Command"], "OS API Execution": ["Monitor for API calls associated with detecting token manipulation only through careful analysis of user activity, examination of running processes, and correlation with other endpoint and network behavior. Analysts can also monitor for use of Windows APIs such as CreateProcessWithTokenW and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.", "DS0009", "https://attack.mitre.org/datasources/DS0009", "Process"]}}
