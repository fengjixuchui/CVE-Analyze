{"TTP_id": "enterprise-TA0006-T1212", "TTP_name": "Exploitation for Credential Access", "Description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.[1][2] Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.", "Property": {"ID": "T1212", "Sub-techniques": "No sub-techniques", "Tactic": "Credential Access", "Platforms": "Linux, Windows, macOS", "Contributors": "John Lambert, Microsoft Threat Intelligence Center", "Version": "1.4", "Created": "18 April 2018", "Last Modified": "28 April 2022"}, "Examples": {}, "Mitigation": {"M1048": ["https://attack.mitre.org/mitigations/M1048", "Application Isolation and Sandboxing", "Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing. Other types of virtualization and application microsegmentation may also mitigate the impact of some types of exploitation. Risks of additional exploits and weaknesses in these systems may still exist.[3]"], "M1050": ["https://attack.mitre.org/mitigations/M1050", "Exploit Protection", "Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior.[4] Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring.[5] Many of these protections depend on the architecture and target application binary for compatibility and may not work for software targeted for defense evasion."], "M1019": ["https://attack.mitre.org/mitigations/M1019", "Threat Intelligence Program", "Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization."], "M1051": ["https://attack.mitre.org/mitigations/M1051", "Update Software", "Update software regularly by employing patch management for internal enterprise endpoints and servers."]}, "Detection": {"Application Log Content": ["Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash.", "DS0015", "https://attack.mitre.org/datasources/DS0015", "Application Log"], "Process Creation": ["Monitor for abnormal process creations, such as a Command and Scripting Interpreter spawning from a potentially exploited application. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes.", "DS0009", "https://attack.mitre.org/datasources/DS0009", "Process"], "User Account Authentication": ["Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen.", "DS0002", "https://attack.mitre.org/datasources/DS0002", "User Account"]}}
