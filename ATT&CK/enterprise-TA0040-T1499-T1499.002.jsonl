{"TTP_id": "enterprise-TA0040-T1499-T1499.002", "TTP_name": "Service Exhaustion Flood", "Description": "Adversaries may target the different network services provided by systems to conduct a denial of service (DoS). Adversaries often target the availability of DNS and web services, however others have been targeted as well.[1] Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service.One example of this type of attack is known as a simple HTTP flood, where an adversary sends a large number of HTTP requests to a web server to overwhelm it and/or an application that runs on top of it. This flood relies on raw volume to accomplish the objective, exhausting any of the various resources required by the victim software to provide the service.[2]Another variation, known as a SSL renegotiation attack, takes advantage of a protocol feature in SSL/TLS. The SSL/TLS protocol suite includes mechanisms for the client and server to agree on an encryption algorithm to use for subsequent secure connections. If SSL renegotiation is enabled, a request can be made for renegotiation of the crypto algorithm. In a renegotiation attack, the adversary establishes a SSL/TLS connection and then proceeds to make a series of renegotiation requests. Because the cryptographic renegotiation has a meaningful cost in computation cycles, this can cause an impact to the availability of the service when done in volume.[3]", "Property": {"ID": "T1499.002", "Sub-technique of": "T1499", "Tactic": "Impact", "Platforms": "Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS", "Impact Type": "Availability", "CAPEC ID": "CAPEC-488, CAPEC-489, CAPEC-528", "Version": "1.3", "Created": "20 February 2020", "Last Modified": "19 April 2022"}, "Examples": {}, "Mitigation": {"M1037": ["https://attack.mitre.org/mitigations/M1037", "Filter Network Traffic", "Leverage services provided by Content Delivery Networks (CDN) or providers specializing in DoS mitigations to filter traffic upstream from services.[4] Filter boundary traffic by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport."]}, "Detection": {"Application Log Content": ["Monitor for third-party application logging, messaging, and/or other artifacts that may target the different network services provided by systems to conduct a DoS. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.", "DS0015", "https://attack.mitre.org/datasources/DS0015", "Application Log"], "Network Traffic Content": ["Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).", "DS0029", "https://attack.mitre.org/datasources/DS0029", "Network Traffic"], "Network Traffic Flow": ["Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.", "", "", ""], "Host Status": ["Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)", "DS0013", "https://attack.mitre.org/datasources/DS0013", "Sensor Health"]}}
