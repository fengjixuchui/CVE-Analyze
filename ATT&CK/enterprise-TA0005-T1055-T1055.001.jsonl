{"TTP_id": "enterprise-TA0005-T1055-T1055.001", "TTP_name": "Dynamic-link Library Injection", "Description": "Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.DLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such as VirtualAllocEx and WriteProcessMemory, then invoked with CreateRemoteThread (which calls the LoadLibrary API responsible for loading the DLL). [1]Variations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function of LoadLibrary).[2][1]Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process.", "Property": {"ID": "T1055.001", "Sub-technique of": "T1055", "Tactics": "Defense Evasion, Privilege Escalation", "Platforms": "Windows", "Permissions Required": "User", "Defense Bypassed": "Anti-virus, Application control", "Version": "1.1", "Created": "14 January 2020", "Last Modified": "18 October 2021"}, "Examples": {"S0456": ["https://attack.mitre.org/software/S0456", "Aria-body", "Aria-body has the ability to inject itself into another process such as rundll32.exe and dllhost.exe.[3]"], "G0135": ["https://attack.mitre.org/groups/G0135", "BackdoorDiplomacy", "BackdoorDiplomacy has dropped legitimate software onto a compromised host and used it to execute malicious DLLs.[4]"], "S0089": ["https://attack.mitre.org/software/S0089", "BlackEnergy", "BlackEnergy injects its DLL component into svchost.exe.[5]"], "S0484": ["https://attack.mitre.org/software/S0484", "Carberp", "Carberp's bootkit can inject a malicious DLL into the address space of running processes.[6]"], "S0335": ["https://attack.mitre.org/software/S0335", "Carbon", "Carbon has a command to inject code into a process.[7]"], "S0154": ["https://attack.mitre.org/software/S0154", "Cobalt Strike", "Cobalt Strike has the ability to load DLLs via reflective injection.[8][9]"], "S0126": ["https://attack.mitre.org/software/S0126", "ComRAT", "ComRAT has injected its orchestrator DLL into explorer.exe. ComRAT has also injected its communications module into the victim's default browser to make C2 connections appear less suspicious as all network connections will be initiated by the browser process.[10][11]"], "S0575": ["https://attack.mitre.org/software/S0575", "Conti", "Conti has loaded an encrypted DLL into memory and then executes it.[12][13]"], "S0021": ["https://attack.mitre.org/software/S0021", "Derusbi", "Derusbi injects itself into the secure shell (SSH) process.[14]"], "S0038": ["https://attack.mitre.org/software/S0038", "Duqu", "Duqu will inject itself into different processes to evade detection. The selection of the target process is influenced by the security software that is installed on the system (Duqu will inject into different processes depending on which security suite is installed on the infected host).[15]"], "S0024": ["https://attack.mitre.org/software/S0024", "Dyre", "Dyre injects into other processes to load modules.[16]"], "S0081": ["https://attack.mitre.org/software/S0081", "Elise", "Elise injects DLL files into iexplore.exe.[17][18]"], "S0082": ["https://attack.mitre.org/software/S0082", "Emissary", "Emissary injects its DLL file into a newly spawned Internet Explorer process.[19]"], "S0367": ["https://attack.mitre.org/software/S0367", "Emotet", "Emotet has been observed injecting in to Explorer.exe and other processes. [20][21][22]"], "S0182": ["https://attack.mitre.org/software/S0182", "FinFisher", "FinFisher injects itself into various processes depending on whether it is low integrity or high integrity.[23][24]"], "S0666": ["https://attack.mitre.org/software/S0666", "Gelsemium", "Gelsemium has the ability to inject DLLs into specific processes.[25]"], "S0460": ["https://attack.mitre.org/software/S0460", "Get2", "Get2 has the ability to inject DLLs into processes.[26]"], "S0135": ["https://attack.mitre.org/software/S0135", "HIDEDRV", "HIDEDRV injects a DLL for Downdelph into the explorer.exe process.[27]"], "S0581": ["https://attack.mitre.org/software/S0581", "IronNetInjector", "IronNetInjector has the ability to inject a DLL into running processes, including the IronNetInjector DLL into explorer.exe.[28]"], "S0265": ["https://attack.mitre.org/software/S0265", "Kazuar", "If running in a Windows environment, Kazuar saves a DLL to disk that is injected into the explorer.exe process to execute the payload. Kazuar can also be configured to inject and execute within specific processes.[29]"], "S0250": ["https://attack.mitre.org/software/S0250", "Koadic", "Koadic can perform process injection by using a reflective DLL.[30]"], "G0032": ["https://attack.mitre.org/groups/G0032", "Lazarus Group", "A Lazarus Group malware sample performs reflective DLL injection.[31][32]"], "G0065": ["https://attack.mitre.org/groups/G0065", "Leviathan", "Leviathan has utilized techniques like reflective DLL loading to write a DLL into memory and load a shell that provides backdoor access to the victim.[33]"], "S0681": ["https://attack.mitre.org/software/S0681", "Lizar", "Lizar has used the PowerKatz plugin that can be loaded into the address space of a PowerShell process through reflective DLL loading.[34]"], "S0167": ["https://attack.mitre.org/software/S0167", "Matryoshka", "Matryoshka uses reflective DLL injection to inject the malicious library and execute the RAT.[35]"], "S0449": ["https://attack.mitre.org/software/S0449", "Maze", "Maze has injected the malware DLL into a target process.[36][37]"], "S0576": ["https://attack.mitre.org/software/S0576", "MegaCortex", "MegaCortex loads injecthelper.dll into a newly created rundll32.exe process.[38]"], "S0455": ["https://attack.mitre.org/software/S0455", "Metamorfo", "Metamorfo has injected a malicious DLL into the Windows Media Player process (wmplayer.exe).[39]"], "S0457": ["https://attack.mitre.org/software/S0457", "Netwalker", "The Netwalker DLL has been injected reflectively into the memory of a legitimate running process.[40]"], "S0501": ["https://attack.mitre.org/software/S0501", "PipeMon", "PipeMon can inject its modules into various processes using reflective DLL loading.[41]"], "S0012": ["https://attack.mitre.org/software/S0012", "PoisonIvy", "PoisonIvy can inject a malicious DLL into a process.[42][43]"], "S0194": ["https://attack.mitre.org/software/S0194", "PowerSploit", "PowerSploit contains a collection of CodeExecution modules that inject code (DLL, shellcode) into a process.[44][45]"], "S0613": ["https://attack.mitre.org/software/S0613", "PS1", "PS1 can inject its payload DLL Into memory.[46]"], "S0192": ["https://attack.mitre.org/software/S0192", "Pupy", "Pupy can migrate into another process using reflective DLL injection.[47]"], "G0024": ["https://attack.mitre.org/groups/G0024", "Putter Panda", "An executable dropped onto victims by Putter Panda aims to inject the specified DLL into a process that would normally be accessing the network, including Outlook Express (msinm.exe), Outlook (outlook.exe), Internet Explorer (iexplore.exe), and Firefox (firefox.exe).[48]"], "S0458": ["https://attack.mitre.org/software/S0458", "Ramsay", "Ramsay can use ImprovedReflectiveDLLInjection to deploy components.[49]"], "S0055": ["https://attack.mitre.org/software/S0055", "RARSTONE", "After decrypting itself in memory, RARSTONE downloads a DLL file from its C2 server and loads it in the memory space of a hidden Internet Explorer process. This \"downloaded\" file is actually not dropped onto the system.[50]"], "S0241": ["https://attack.mitre.org/software/S0241", "RATANKBA", "RATANKBA performs a reflective DLL injection using a given pid.[51][52]"], "S0125": ["https://attack.mitre.org/software/S0125", "Remsec", "Remsec can perform DLL injection.[53]"], "S0461": ["https://attack.mitre.org/software/S0461", "SDBbot", "SDBbot has the ability to inject a downloaded DLL into a newly created rundll32.exe process.[26]"], "S0596": ["https://attack.mitre.org/software/S0596", "ShadowPad", "ShadowPad has injected a DLL into svchost.exe.[54]"], "S0273": ["https://attack.mitre.org/software/S0273", "Socksbot", "Socksbot creates a suspended svchost process and injects its DLL into it.[55]"], "S0615": ["https://attack.mitre.org/software/S0615", "SombRAT", "SombRAT can execute loadfromfile, loadfromstorage, and loadfrommem to inject a DLL from disk, storage, or memory respectively.[46]"], "S0603": ["https://attack.mitre.org/software/S0603", "Stuxnet", "Stuxnet injects an entire DLL into an existing, newly created, or preselected trusted process.[56]"], "S0018": ["https://attack.mitre.org/software/S0018", "Sykipot", "Sykipot injects itself into running instances of outlook.exe, iexplore.exe, or firefox.exe.[57]"], "G0092": ["https://attack.mitre.org/groups/G0092", "TA505", "TA505 has been seen injecting a DLL into winword.exe.[58]"], "S0011": ["https://attack.mitre.org/software/S0011", "Taidoor", "Taidoor can perform DLL loading.[59][60]"], "S0467": ["https://attack.mitre.org/software/S0467", "TajMahal", "TajMahal has the ability to inject DLLs for malicious plugins into running processes.[61]"], "G0081": ["https://attack.mitre.org/groups/G0081", "Tropic Trooper", "Tropic Trooper has injected a DLL backdoor into dllhost.exe and svchost.exe.[62][63]"], "G0010": ["https://attack.mitre.org/groups/G0010", "Turla", "Turla has used Metasploit to perform reflective DLL injection in order to escalate privileges.[64][65]"], "G0102": ["https://attack.mitre.org/groups/G0102", "Wizard Spider", "Wizard Spider has injected malicious DLLs into memory with read, write, and execute permissions.[66][67]"], "S0412": ["https://attack.mitre.org/software/S0412", "ZxShell", "ZxShell is injected into a shared SVCHOST process.[68]"]}, "Mitigation": {"M1040": ["https://attack.mitre.org/mitigations/M1040", "Behavior Prevention on Endpoint", "Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process."]}, "Detection": {"Module Load": ["Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.", "DS0011", "https://attack.mitre.org/datasources/DS0011", "Module"], "OS API Execution": ["Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as VirtualAllocEx/WriteProcessMemory, may be used for this technique.[1]", "DS0009", "https://attack.mitre.org/datasources/DS0009", "Process"], "Process Access": ["Monitor for process being viewed that may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges.", "", "", ""], "Process Modification": ["Monitor for changes made to processes that may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges.", "", "", ""]}}
