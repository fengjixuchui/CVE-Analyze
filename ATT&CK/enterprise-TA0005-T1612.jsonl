{"TTP_id": "enterprise-TA0005-T1612", "TTP_name": "Build Image on Host", "Description": "Adversaries may build a container image directly on a host to bypass defenses that monitor for the retrieval of malicious images from a public registry. A remote build request may be sent to the Docker API that includes a Dockerfile that pulls a vanilla base image, such as alpine, from a public or local registry and then builds a custom image upon it.[1]An adversary may take advantage of that build API to build a custom image on the host that includes malware downloaded from their C2 server, and then they then may utilize Deploy Container using that custom image.[2][3] If the base image is pulled from a public registry, defenses will likely not detect the image as malicious since itâ€™s a vanilla image. If the base image already resides in a local registry, the pull may be considered even less suspicious since the image is already in the environment.", "Property": {"ID": "T1612", "Sub-techniques": "No sub-techniques", "Tactic": "Defense Evasion", "Platforms": "Containers", "Permissions Required": "User, root", "Contributors": "Assaf Morag, @MoragAssaf, Team Nautilus Aqua Security; Michael Katchinskiy, @michael64194968, Team Nautilus Aqua Security; Roi Kol, @roykol1, Team Nautilus Aqua Security; Vishwas Manral, McAfee", "Version": "1.2", "Created": "30 March 2021", "Last Modified": "01 April 2022"}, "Examples": {}, "Mitigation": {"M1047": ["https://attack.mitre.org/mitigations/M1047", "Audit", "Audit images deployed within the environment to ensure they do not contain any malicious components."], "M1035": ["https://attack.mitre.org/mitigations/M1035", "Limit Access to Resource Over Network", "Limit communications with the container service to local Unix sockets or remote access via SSH. Require secure port access to communicate with the APIs over TLS by disabling unauthenticated access to the Docker API on port 2375. Instead, communicate with the Docker API over TLS on port 2376.[4]"], "M1030": ["https://attack.mitre.org/mitigations/M1030", "Network Segmentation", "Deny direct remote access to internal systems through the use of network proxies, gateways, and firewalls."], "M1026": ["https://attack.mitre.org/mitigations/M1026", "Privileged Account Management", "Ensure containers are not running as root by default. In Kubernetes environments, consider defining a Pod Security Policy that prevents pods from running privileged containers.[5]"]}, "Detection": {"Image Creation": ["Monitor for unexpected Docker image build requests to the Docker daemon on hosts in the environment.", "DS0007", "https://attack.mitre.org/datasources/DS0007", "Image"], "Network Connection Creation": ["Monitor for established network communications with anomalous IPs that have never been seen before in the environment that may indicate the download of malicious code.", "DS0029", "https://attack.mitre.org/datasources/DS0029", "Network Traffic"], "Network Traffic Content": ["Monitor for network traffic associated with requests and/or downloads of container images, especially those that may be anomalous or known malicious.", "", "", ""], "Network Traffic Flow": ["Monitor for established network communications with anomalous IPs that have never been seen before in the environment that may indicate the download of malicious code.", "", "", ""]}}
