{"TTP_id": "enterprise-TA0004-T1547-T1547.005", "TTP_name": "Security Support Provider", "Description": "Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs.The SSP configuration is stored in two Registry keys: HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages and HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.[1]", "Property": {"ID": "T1547.005", "Sub-technique of": "T1547", "Tactics": "Persistence, Privilege Escalation", "Platforms": "Windows", "Permissions Required": "Administrator", "Version": "1.0", "Created": "24 January 2020", "Last Modified": "25 March 2020"}, "Examples": {"S0363": ["https://attack.mitre.org/software/S0363", "Empire", "Empire can enumerate Security Support Providers (SSPs) as well as utilize PowerSploit's Install-SSP and Invoke-Mimikatz to install malicious SSPs and log authentication events.[2]"], "S0002": ["https://attack.mitre.org/software/S0002", "Mimikatz", "The Mimikatz credential dumper contains an implementation of an SSP.[3]"], "S0194": ["https://attack.mitre.org/software/S0194", "PowerSploit", "PowerSploit's Install-SSP Persistence module can be used to establish by installing a SSP DLL.[4][5]"]}, "Mitigation": {"M1025": ["https://attack.mitre.org/mitigations/M1025", "Privileged Process Integrity", "Windows 8.1, Windows Server 2012 R2, and later versions may make LSA run as a Protected Process Light (PPL) by setting the Registry key HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\RunAsPPL, which requires all SSP DLLs to be signed by Microsoft. [1] [6]"]}, "Detection": {"Command Execution": ["Monitor executed commands and arguments that may abuse security support providers (SSPs) to execute DLLs when the system boots.", "DS0017", "https://attack.mitre.org/datasources/DS0017", "Command"], "Module Load": ["Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe with AuditLevel = 8. [1] [6]", "DS0011", "https://attack.mitre.org/datasources/DS0011", "Module"], "Windows Registry Key Modification": ["Monitor the Registry for changes to the SSP Registry keys. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe with AuditLevel = 8. [1] [6]", "DS0024", "https://attack.mitre.org/datasources/DS0024", "Windows Registry"]}}
