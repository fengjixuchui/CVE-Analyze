{"TTP_id": "enterprise-TA0005-T1222-T1222.002", "TTP_name": "Linux and Mac File and Directory Permissions Modification", "Description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.[1][2] File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).Most Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platformâ€™s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: chown (short for change owner), and chmod (short for change mode).Adversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via Unix Shell Configuration Modification or tainting/hijacking other instrumental binary/configuration files via Hijack Execution Flow.[3]", "Property": {"ID": "T1222.002", "Sub-technique of": "T1222", "Tactic": "Defense Evasion", "Platforms": "Linux, macOS", "Permissions Required": "User, root", "Version": "1.1", "Created": "04 February 2020", "Last Modified": "13 September 2021"}, "Examples": {"G0050": ["https://attack.mitre.org/groups/G0050", "APT32", "APT32's macOS backdoor changes the permission of the file it wants to execute to 755.[4]"], "S0482": ["https://attack.mitre.org/software/S0482", "Bundlore", "Bundlore changes the permissions of a payload using the command chmod -R 755.[3]"], "S0281": ["https://attack.mitre.org/software/S0281", "Dok", "Dok gives all users execute permissions for the application using the command chmot +x /Users/Shared/AppStore.app.[5]"], "S0599": ["https://attack.mitre.org/software/S0599", "Kinsing", "Kinsing has used chmod to modify permissions on key files for use.[6]"], "S0402": ["https://attack.mitre.org/software/S0402", "OSX/Shlayer", "OSX/Shlayer can use the chmod utility to set a file as executable, such as chmod 777 or chmod +x.[3][7][8]"], "S0352": ["https://attack.mitre.org/software/S0352", "OSX_OCEANLOTUS.D", "OSX_OCEANLOTUS.D has changed permissions of a second-stage payload to an executable via chmod.[9]"], "S0598": ["https://attack.mitre.org/software/S0598", "P.A.S. Webshell", "P.A.S. Webshell has the ability to modify file permissions.[10]"], "S0587": ["https://attack.mitre.org/software/S0587", "Penquin", "Penquin can add the executable flag to a downloaded file.[11]"], "G0106": ["https://attack.mitre.org/groups/G0106", "Rocke", "Rocke has changed file permissions of files so they could not be modified.[12]"], "G0139": ["https://attack.mitre.org/groups/G0139", "TeamTNT", "TeamTNT has modified the permissions on binaries with chattr.[13]"], "S0658": ["https://attack.mitre.org/software/S0658", "XCSSET", "XCSSET uses the chmod +x command to grant executable permissions to the malicious file.[3]"]}, "Mitigation": {"M1026": ["https://attack.mitre.org/mitigations/M1026", "Privileged Account Management", "Ensure critical system files as well as those known to be abused by adversaries have restrictive permissions and are owned by an appropriately privileged account, especially if access is not required by users nor will inhibit system functionality."], "M1022": ["https://attack.mitre.org/mitigations/M1022", "Restrict File and Directory Permissions", "Applying more restrictive permissions to files and directories could prevent adversaries from modifying the access control lists."]}, "Detection": {"Command Execution": ["Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Commonly abused command arguments include chmod +x, chmod -R 755, and chmod 777.[3]", "DS0017", "https://attack.mitre.org/datasources/DS0017", "Command"], "File Metadata": ["Monitor and investigate attempts to modify ACLs and file/directory ownership. Consider enabling file/directory permission change auditing on folders containing key binary/configuration files.", "DS0022", "https://attack.mitre.org/datasources/DS0022", "File"], "Process Creation": ["Monitor for newly executed processes that may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.[1][2]", "DS0009", "https://attack.mitre.org/datasources/DS0009", "Process"]}}
