{"TTP_id": "enterprise-TA0005-T1218-T1218.010", "TTP_name": "Regsvr32", "Description": "Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. The Regsvr32.exe binary may also be signed by Microsoft. [1]Malicious usage of Regsvr32.exe may avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of allowlists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe can also be used to specifically bypass application control using functionality to load COM scriptlets to execute DLLs under user permissions. Since Regsvr32.exe is network and proxy aware, the scripts can be loaded by passing a uniform resource locator (URL) to file on an external Web server as an argument during invocation. This method makes no changes to the Registry as the COM object is not actually registered, only executed. [2] This variation of the technique is often referred to as a \"Squiblydoo\" and has been used in campaigns targeting governments. [3] [4]Regsvr32.exe can also be leveraged to register a COM Object used to establish persistence via Component Object Model Hijacking. [3]", "Property": {"ID": "T1218.010", "Sub-technique of": "T1218", "Tactic": "Defense Evasion", "Platforms": "Windows", "Permissions Required": "Administrator, User", "Defense Bypassed": "Anti-virus, Application control, Digital Certificate Validation", "Contributors": "Casey Smith", "Version": "2.0", "Created": "23 January 2020", "Last Modified": "11 March 2022"}, "Examples": {"S0622": ["https://attack.mitre.org/software/S0622", "AppleSeed", "AppleSeed can call regsvr32.exe for execution.[5]"], "G0073": ["https://attack.mitre.org/groups/G0073", "APT19", "APT19 used Regsvr32 to bypass application control techniques.[6]"], "G0050": ["https://attack.mitre.org/groups/G0050", "APT32", "APT32 created a Scheduled Task/Job that used regsvr32.exe to execute a COM scriptlet that dynamically downloaded a backdoor and injected it into memory. The group has also used regsvr32 to run their backdoor.[7][8][9]"], "S0373": ["https://attack.mitre.org/software/S0373", "Astaroth", "Astaroth can be loaded through regsvr32.exe.[10]"], "G0108": ["https://attack.mitre.org/groups/G0108", "Blue Mockingbird", "Blue Mockingbird has executed custom-compiled XMRIG miner DLLs using regsvr32.exe.[11]"], "G0080": ["https://attack.mitre.org/groups/G0080", "Cobalt Group", "Cobalt Group has used regsvr32.exe to execute scripts.[12][13][14]"], "G0009": ["https://attack.mitre.org/groups/G0009", "Deep Panda", "Deep Panda has used regsvr32.exe to execute a server variant of Derusbi in victim networks.[15]"], "S0021": ["https://attack.mitre.org/software/S0021", "Derusbi", "Derusbi variants have been seen that use Registry persistence to proxy execution through regsvr32.exe.[16]"], "S0554": ["https://attack.mitre.org/software/S0554", "Egregor", "Egregor has used regsvr32.exe to execute malicious DLLs.[17]"], "S0568": ["https://attack.mitre.org/software/S0568", "EVILNUM", "EVILNUM can run a remote scriptlet that drops a file and executes it via regsvr32.exe.[18]"], "S0698": ["https://attack.mitre.org/software/S0698", "HermeticWizard", "HermeticWizard has used regsvr32.exe /s /i to execute malicious payloads.[19]"], "S0087": ["https://attack.mitre.org/software/S0087", "Hi-Zor", "Hi-Zor executes using regsvr32.exe called from the Registry Run Keys / Startup Folder persistence mechanism.[20]"], "G0100": ["https://attack.mitre.org/groups/G0100", "Inception", "Inception has ensured persistence at system boot by setting the value regsvr32 %path%\\ctfmonrn.dll /s.[21]"], "G0094": ["https://attack.mitre.org/groups/G0094", "Kimsuky", "Kimsuky has executed malware with regsvr32s.[22]"], "S0250": ["https://attack.mitre.org/software/S0250", "Koadic", "Koadic can use Regsvr32 to execute additional payloads.[23]"], "G0032": ["https://attack.mitre.org/groups/G0032", "Lazarus Group", "Lazarus Group has used rgsvr32 to execute custom malware.[24]"], "G0065": ["https://attack.mitre.org/groups/G0065", "Leviathan", "Leviathan has used regsvr32 for execution.[25]"], "S0284": ["https://attack.mitre.org/software/S0284", "More_eggs", "More_eggs has used regsvr32.exe to execute the malicious DLL.[26]"], "S0229": ["https://attack.mitre.org/software/S0229", "Orz", "Some Orz versions have an embedded DLL known as MockDll that uses Process Hollowing and regsvr32 to execute another payload.[25]"], "S0650": ["https://attack.mitre.org/software/S0650", "QakBot", "QakBot can use Regsvr32 to execute malicious DLLs.[27][28][29]"], "S0481": ["https://attack.mitre.org/software/S0481", "Ragnar Locker", "Ragnar Locker has used regsvr32.exe to execute components of VirtualBox.[30]"], "S0270": ["https://attack.mitre.org/software/S0270", "RogueRobin", "RogueRobin uses regsvr32.exe to run a .sct file for execution.[31]"], "G0127": ["https://attack.mitre.org/groups/G0127", "TA551", "TA551 has used regsvr32.exe to load malicious DLLs.[32]"], "S0476": ["https://attack.mitre.org/software/S0476", "Valak", "Valak has used regsvr32.exe to launch malicious DLLs.[33][32]"], "G0090": ["https://attack.mitre.org/groups/G0090", "WIRTE", "WIRTE has used regsvr32.exe to trigger the execution of a malicious script.[34]"], "S0341": ["https://attack.mitre.org/software/S0341", "Xbash", "Xbash can use regsvr32 for executing scripts.[35]"]}, "Mitigation": {"M1050": ["https://attack.mitre.org/mitigations/M1050", "Exploit Protection", "Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block regsvr32.exe from being used to bypass application control. [36] Identify and block potentially malicious software executed through regsvr32 functionality by using application control [37] tools, like Windows Defender Application Control[38], AppLocker, [39] [40] or Software Restriction Policies [41] where appropriate. [42]"]}, "Detection": {"Command Execution": ["Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded. [3]", "DS0017", "https://attack.mitre.org/datasources/DS0017", "Command"], "Module Load": ["Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.", "DS0011", "https://attack.mitre.org/datasources/DS0011", "Module"], "Network Connection Creation": ["Monitor for newly constructed network connections that are sent or received by untrusted hosts.", "DS0029", "https://attack.mitre.org/datasources/DS0029", "Network Traffic"], "Process Creation": ["Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity.", "DS0009", "https://attack.mitre.org/datasources/DS0009", "Process"]}}
