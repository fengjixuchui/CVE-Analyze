{"TTP_id": "enterprise-TA0004-T1068", "TTP_name": "Exploitation for Privilege Escalation", "Description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.When initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.Adversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).[1][2] Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via Ingress Tool Transfer or Lateral Tool Transfer.", "Property": {"ID": "T1068", "Sub-techniques": "No sub-techniques", "Tactic": "Privilege Escalation", "Platforms": "Containers, Linux, Windows, macOS", "Permissions Required": "User", "Effective Permissions": "User", "Contributors": "Idan Revivo, @idanr86, Team Nautilus Aqua Security; Joas Antonio dos Santos, @C0d3Cr4zy, Inmetrics; Yaniv Agman, @AgmanYaniv, Team Nautilus Aqua Security", "Version": "1.3", "Created": "31 May 2017", "Last Modified": "22 April 2021"}, "Examples": {"G0007": ["https://attack.mitre.org/groups/G0007", "APT28", "APT28 has exploited CVE-2014-4076, CVE-2015-2387, CVE-2015-1701, CVE-2017-0263 to escalate privileges.[3][4][5]"], "G0016": ["https://attack.mitre.org/groups/G0016", "APT29", "APT29 has exploited CVE-2021-36934 to escalate privileges on a compromised host.[6]"], "G0050": ["https://attack.mitre.org/groups/G0050", "APT32", "APT32 has used CVE-2016-7255 to escalate privileges.[7]"], "G0064": ["https://attack.mitre.org/groups/G0064", "APT33", "APT33 has used a publicly available exploit for CVE-2017-0213 to escalate privileges on a local system.[8]"], "S0484": ["https://attack.mitre.org/software/S0484", "Carberp", "Carberp has exploited multiple Windows vulnerabilities (CVE-2010-2743, CVE-2010-3338, CVE-2010-4398, CVE-2008-1084) and a .NET Runtime Optimization vulnerability for privilege escalation.[9][10]"], "G0080": ["https://attack.mitre.org/groups/G0080", "Cobalt Group", "Cobalt Group has used exploits to increase their levels of rights and privileges.[11]"], "S0154": ["https://attack.mitre.org/software/S0154", "Cobalt Strike", "Cobalt Strike can exploit vulnerabilities such as MS14-058.[12][13]"], "S0050": ["https://attack.mitre.org/software/S0050", "CosmicDuke", "CosmicDuke attempts to exploit privilege escalation vulnerabilities CVE-2010-0232 or CVE-2010-4398.[14]"], "S0363": ["https://attack.mitre.org/software/S0363", "Empire", "Empire can exploit vulnerabilities such as MS16-032 and MS16-135.[15]"], "G0037": ["https://attack.mitre.org/groups/G0037", "FIN6", "FIN6 has used tools to exploit Windows vulnerabilities in order to escalate privileges. The tools targeted CVE-2013-3660, CVE-2011-2005, and CVE-2010-4398, all of which could allow local users to access kernel-level privileges.[16]"], "G0061": ["https://attack.mitre.org/groups/G0061", "FIN8", "FIN8 has exploited the CVE-2016-0167 local vulnerability.[17][18]"], "S0601": ["https://attack.mitre.org/software/S0601", "Hildegard", "Hildegard has used the BOtB tool which exploits CVE-2019-5736.[19]"], "S0260": ["https://attack.mitre.org/software/S0260", "InvisiMole", "InvisiMole has exploited CVE-2007-5633 vulnerability in the speedfan.sys driver to obtain kernel mode privileges.[1]"], "S0044": ["https://attack.mitre.org/software/S0044", "JHUHUGIT", "JHUHUGIT has exploited CVE-2015-1701 and CVE-2015-2387 to escalate privileges.[20][21]"], "S0664": ["https://attack.mitre.org/software/S0664", "Pandora", "Pandora can use CVE-2017-15303 to bypass Windows Driver Signature Enforcement (DSE) protection and load its driver.[22]"], "G0068": ["https://attack.mitre.org/groups/G0068", "PLATINUM", "PLATINUM has leveraged a zero-day vulnerability to escalate privileges.[23]"], "S0378": ["https://attack.mitre.org/software/S0378", "PoshC2", "PoshC2 contains modules for local privilege escalation exploits such as CVE-2016-9192 and CVE-2016-0099.[24]"], "S0654": ["https://attack.mitre.org/software/S0654", "ProLock", "ProLock can use CVE-2019-0859 to escalate privileges on a compromised host.[25]"], "S0125": ["https://attack.mitre.org/software/S0125", "Remsec", "Remsec has a plugin to drop and execute vulnerable Outpost Sandbox or avast! Virtualization drivers in order to gain kernel mode privileges.[26]"], "S0623": ["https://attack.mitre.org/software/S0623", "Siloscape", "Siloscape has leveraged a vulnerability in Windows containers to perform an Escape to Host.[27]"], "S0603": ["https://attack.mitre.org/software/S0603", "Stuxnet", "Stuxnet used MS10-073 and an undisclosed Task Scheduler vulnerability to escalate privileges on local Windows machines.[28]"], "G0027": ["https://attack.mitre.org/groups/G0027", "Threat Group-3390", "Threat Group-3390 has used CVE-2014-6324 and CVE-2017-0213 to escalate privileges.[29][30]"], "G0131": ["https://attack.mitre.org/groups/G0131", "Tonto Team", "Tonto Team has exploited CVE-2019-0803 and MS16-032 to escalate privileges.[31]"], "G0010": ["https://attack.mitre.org/groups/G0010", "Turla", "Turla has exploited vulnerabilities in the VBoxDrv.sys driver to obtain kernel mode privileges.[2]"], "G0107": ["https://attack.mitre.org/groups/G0107", "Whitefly", "Whitefly has used an open-source tool to exploit a known Windows privilege escalation vulnerability (CVE-2016-0051) on unpatched computers.[32]"], "S0176": ["https://attack.mitre.org/software/S0176", "Wingbird", "Wingbird exploits CVE-2016-4117 to allow an executable to gain escalated privileges.[33]"], "S0658": ["https://attack.mitre.org/software/S0658", "XCSSET", "XCSSET has used a zero-day exploit in the ssh launchdaemon to elevate privileges and bypass SIP.[34]"], "G0128": ["https://attack.mitre.org/groups/G0128", "ZIRCONIUM", "ZIRCONIUM has exploited CVE-2017-0005 for local privilege escalation.[35]"], "S0672": ["https://attack.mitre.org/software/S0672", "Zox", "Zox has the ability to leverage local and remote exploits to escalate privileges.[36]"]}, "Mitigation": {"M1048": ["https://attack.mitre.org/mitigations/M1048", "Application Isolation and Sandboxing", "Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing. Other types of virtualization and application microsegmentation may also mitigate the impact of some types of exploitation. Risks of additional exploits and weaknesses in these systems may still exist. [37]"], "M1038": ["https://attack.mitre.org/mitigations/M1038", "Execution Prevention", "Consider blocking the execution of known vulnerable drivers that adversaries may exploit to execute code in kernel mode. Validate driver block rules in audit mode to ensure stability prior to production deployment.[38]"], "M1050": ["https://attack.mitre.org/mitigations/M1050", "Exploit Protection", "Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior. [39] Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring. [40] Many of these protections depend on the architecture and target application binary for compatibility and may not work for software components targeted for privilege escalation."], "M1019": ["https://attack.mitre.org/mitigations/M1019", "Threat Intelligence Program", "Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization."], "M1051": ["https://attack.mitre.org/mitigations/M1051", "Update Software", "Update software regularly by employing patch management for internal enterprise endpoints and servers."]}, "Detection": {"Driver Load": ["Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the processes. This could include suspicious files written to disk, evidence of Process Injection for attempts to hide execution or evidence of Discovery. Consider monitoring for the presence or loading (ex: Sysmon Event ID 6) of known vulnerable drivers that adversaries may drop and exploit to execute code in kernel mode.[38] Higher privileges are often necessary to perform additional actions such as some methods of OS Credential Dumping. Look for additional activity that may indicate an adversary has gained higher privileges.", "DS0027", "https://attack.mitre.org/datasources/DS0027", "Driver"]}}
