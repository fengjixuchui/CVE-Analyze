{"TTP_id": "enterprise-TA0005-T1553-T1553.003", "TTP_name": "SIP and Trust Provider Hijacking", "Description": "Adversaries may tamper with SIP and trust provider components to mislead the operating system and application control tools when conducting signature validation checks. In user mode, Windows Authenticode [1] digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function, [2] which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature. [3]Because of the varying executable file types and corresponding signature formats, Microsoft created software components called Subject Interface Packages (SIPs) [4] to provide a layer of abstraction between API functions and files. SIPs are responsible for enabling API functions to create, retrieve, calculate, and verify signatures. Unique SIPs exist for most file formats (Executable, PowerShell, Installer, etc., with catalog signing providing a catch-all [5]) and are identified by globally unique identifiers (GUIDs). [3]Similar to Code Signing, adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system. Adversaries may hijack SIP and trust provider components to mislead operating system and application control tools to classify malicious (or any) code as signed by: [3]Hijacking SIP or trust provider components can also enable persistent code execution, since these malicious components may be invoked by any application that performs code signing or signature validation. [3]", "Property": {"ID": "T1553.003", "Sub-technique of": "T1553", "Tactic": "Defense Evasion", "Platforms": "Windows", "Defense Bypassed": "Application Control, Autoruns Analysis, Digital Certificate Validation, User Mode Signature Validation", "Contributors": "Matt Graeber, @mattifestation, SpecterOps", "Version": "1.0", "Created": "05 February 2020", "Last Modified": "05 May 2022"}, "Examples": {}, "Mitigation": {"M1038": ["https://attack.mitre.org/mitigations/M1038", "Execution Prevention", "Enable application control solutions such as AppLocker and/or Device Guard to block the loading of malicious SIP DLLs."], "M1022": ["https://attack.mitre.org/mitigations/M1022", "Restrict File and Directory Permissions", "Restrict storage and execution of SIP DLLs to protected directories, such as C:\\Windows, rather than user directories."], "M1024": ["https://attack.mitre.org/mitigations/M1024", "Restrict Registry Permissions", "Ensure proper permissions are set for Registry hives to prevent users from modifying keys related to SIP and trust provider components. Components may still be able to be hijacked to suitable functions already present on disk if malicious modifications to Registry keys are not prevented."]}, "Detection": {"File Modification": ["Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.[3] Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure \"Hide Microsoft Entries\" and \"Hide Windows Entries\" are both deselected.[3]", "DS0022", "https://attack.mitre.org/datasources/DS0022", "File"], "Module Load": ["Enable CryptoAPI v2 (CAPI) event logging [7] to monitor and analyze error events related to failed trust validation (Event ID 81, though this event can be subverted by hijacked trust provider components) as well as any other provided information events (ex: successful validations). Code Integrity event logging may also provide valuable indicators of malicious SIP or trust provider loads, since protected processes that attempt to load a maliciously-crafted trust validation component will likely fail (Event ID 3033). [3]", "DS0011", "https://attack.mitre.org/datasources/DS0011", "Module"], "Windows Registry Key Modification": ["Enable the Registry Global Object Access Auditing [8] setting in the Advanced Security Audit policy to apply a global system access control list (SACL) and event auditing on modifications to Registry values (sub)keys related to SIPs and trust providers:[9]* HKLM\\SOFTWARE\\Microsoft\\Cryptography\\OID* HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\OID* HKLM\\SOFTWARE\\Microsoft\\Cryptography\\Providers\\Trust* HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\Providers\\TrustNote: As part of this technique, adversaries may attempt to manually edit these Registry keys (ex: Regedit) or utilize the legitimate registration process using Regsvr32.[3]Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.[3]", "DS0024", "https://attack.mitre.org/datasources/DS0024", "Windows Registry"]}}
