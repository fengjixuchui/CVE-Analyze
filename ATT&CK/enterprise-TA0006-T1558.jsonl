{"TTP_id": "enterprise-TA0006-T1558", "TTP_name": "Steal or Forge Kerberos Tickets", "Description": "Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable Pass the Ticket. Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \"realms\", there are three basic participants: client, service, and Key Distribution Center (KDC).[1] Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting. Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.On Windows, the built-in klist utility can be used to list and analyze cached Kerberos tickets.[2]Linux systems on Active Directory domains store Kerberos credentials locally in the credential cache file referred to as the \"ccache\". The credentials are stored in the ccache file while they remain valid and generally while a user's session lasts.[3] On modern Redhat Enterprise Linux systems, and derivative distributions, the System Security Services Daemon (SSSD) handles Kerberos tickets. By default SSSD maintains a copy of the ticket database that can be found in /var/lib/sss/secrets/secrets.ldb as well as the corresponding key located in /var/lib/sss/secrets/.secrets.mkey. Both files require root access to read. If an adversary is able to access the database and key, the credential cache Kerberos blob can be extracted and converted into a usable Kerberos ccache file that adversaries may use for Pass the Ticket. The ccache file may also be converted into a Windows format using tools such as Kekeo.[4][5][6]Kerberos tickets on macOS are stored in a standard ccache format, similar to Linux. By default, access to these ccache entries is federated through the KCM daemon process via the Mach RPC protocol, which uses the caller's environment to determine access. The storage location for these ccache entries is influenced by the /etc/krb5.conf configuration file and the KRB5CCNAME environment variable which can specify to save them to disk or keep them protected via the KCM daemon. Users can interact with ticket storage using kinit, klist, ktutil, and kcc built-in binaries or via Apple's native Kerberos framework. Adversaries can use open source tools to interact with the ccache files directly or to use the Kerberos framework to call lower-level APIs for extracting the user's TGT or Service Tickets.[7][8]", "Property": {"ID": "T1558", "Sub-techniques": "T1558.001, T1558.002, T1558.003, T1558.004", "Tactic": "Credential Access", "Platforms": "Linux, Windows, macOS", "System Requirements": "Kerberos authentication enabled", "Permissions Required": "User, root", "CAPEC ID": "CAPEC-652", "Contributors": "Cody Thomas, SpecterOps; Tim (Wadhwa-)Brown", "Version": "1.4", "Created": "11 February 2020", "Last Modified": "08 March 2022"}, "Examples": {}, "Mitigation": {"M1015": ["https://attack.mitre.org/mitigations/M1015", "Active Directory Configuration", "For containing the impact of a previously generated golden ticket, reset the built-in KRBTGT account password twice, which will invalidate any existing golden tickets that have been created with the KRBTGT hash and other Kerberos tickets derived from it. For each domain, change the KRBTGT account password once, force replication, and then change the password a second time. Consider rotating the KRBTGT account password every 180 days.[9]"], "M1041": ["https://attack.mitre.org/mitigations/M1041", "Encrypt Sensitive Information", "Enable AES Kerberos encryption (or another stronger encryption algorithm), rather than RC4, where possible.[10]"], "M1027": ["https://attack.mitre.org/mitigations/M1027", "Password Policies", "Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire.[10] Also consider using Group Managed Service Accounts or another third party product such as password vaulting.[10]"], "M1026": ["https://attack.mitre.org/mitigations/M1026", "Privileged Account Management", "Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators.[10]"]}, "Detection": {"Active Directory Credential Request": ["Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4672, 4634), RC4 encryption within ticket granting tickets (TGTs), and ticket granting service (TGS) requests without preceding TGT requests.[11][12][13]Monitor the lifetime of TGT tickets for values that differ from the default domain duration.[14] Monitor for indications of Pass the Ticket being used to move laterally.", "DS0026", "https://attack.mitre.org/datasources/DS0026", "Active Directory"], "Command Execution": ["Monitor executed commands and arguments that may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable Pass the Ticket.", "DS0017", "https://attack.mitre.org/datasources/DS0017", "Command"], "File Access": ["Monitor for unexpected processes interacting with lsass.exe.[15] Common credential dumpers such as Mimikatz access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored. Monitor for unusual processes accessing secrets.ldb and .secrets.mkey located in /var/lib/sss/secrets/.", "DS0022", "https://attack.mitre.org/datasources/DS0022", "File"], "Logon Session Metadata": ["Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).[16] [10]", "DS0028", "https://attack.mitre.org/datasources/DS0028", "Logon Session"]}}
