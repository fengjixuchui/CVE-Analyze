{"TTP_id": "enterprise-TA0006-T1552-T1552.003", "TTP_name": "Bash History", "Description": "Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the \"history\" utility. Once a user logs out, the history is flushed to the user’s .bash_history file. For each user, this file resides at the same location: ~/.bash_history. Typically, this file keeps track of the user’s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Adversaries can abuse this by looking through the file for potential credentials. [1]", "Property": {"ID": "T1552.003", "Sub-technique of": "T1552", "Tactic": "Credential Access", "Platforms": "Linux, macOS", "Permissions Required": "User", "Version": "1.1", "Created": "04 February 2020", "Last Modified": "08 March 2022"}, "Examples": {"S0599": ["https://attack.mitre.org/software/S0599", "Kinsing", "Kinsing has searched bash_history for credentials.[2]"]}, "Mitigation": {"M1028": ["https://attack.mitre.org/mitigations/M1028", "Operating System Configuration", "There are multiple methods of preventing a user's command history from being flushed to their .bash_history file, including use of the following commands:set +o history and set -o history to start logging again;unset HISTFILE being added to a user's .bash_rc file; andln -s /dev/null ~/.bash_history to write commands to /dev/nullinstead."]}, "Detection": {"Command Execution": ["While users do typically rely on their history of commands, they often access this history through other utilities like \"history\" instead of commands like cat ~/.bash_history.", "DS0017", "https://attack.mitre.org/datasources/DS0017", "Command"], "File Access": ["Monitoring when the user's .bash_history is read can help alert to suspicious activity.", "DS0022", "https://attack.mitre.org/datasources/DS0022", "File"]}}
